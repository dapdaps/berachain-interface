import Empty from "@/components/empty"
import FlexTable, { Column } from "@/components/flex-table"
import useCustomAccount from "@/hooks/use-account"
import useClickTracking from "@/hooks/use-click-tracking"
import { numberFormatter } from "@/utils/number-formatter"
import { formatLongText } from "@/utils/utils"
import Big from "big.js"
import { memo, useState } from "react"
import useRanks from "../hooks/use-ranks"
import useWeekRound from "../hooks/use-week-round"
import Modal from "@/components/modal"
import clsx from "clsx"

export default memo(function Leaderboard({
  onClose,
  round,
  startDate,
  endDate,
  weekTime,
  handleNextRound,
  handlePreviousRound,
  prevDisabled,
  nextDisabled
}: {
  onClose: () => void,
  round: number,
  startDate: string,
  endDate: string,
  weekTime: string,
  handleNextRound: () => void,
  handlePreviousRound: () => void
  prevDisabled: boolean,
  nextDisabled: boolean
}) {
  const { handleReport } = useClickTracking();
  const { account } = useCustomAccount()
  const { ranks, loading: loadingRanks } = useRanks({ weekTime })


  const COLUMNS = [{
    title: 'player',
    dataIndex: 'address',
    align: 'left',
    width: '75%',
    render: (text: any, record: any, index: number) => {
      return (
        <div className="flex items-center gap-[8px]">
          <RankItem rank={record.rank} />
          <div className="text-black font-Montserrat font-medium text-[14px]">{formatLongText(record?.address, 5, 5)}</div>
        </div>
      )
    }
  }, , {
    title: 'PNL',
    dataIndex: 'profit',
    align: 'right',
    width: '25%',
    render: (text: any, record: any, index: number) => {
      return <div className={clsx("font-Montserrat text-[16px]", record?.profit >= 0 ? 'text-[#7EA82B]' : 'text-[#FF0000]')}>
        {record?.profit ?? '-'}
      </div>
    }
  },]

  return (
    <Modal
      open={true}
      onClose={onClose}
    >
      <div className="m-[0_auto_39px] relative md:w-full w-[720px] p-[12px] border-[2px] border-[#7F6C41] rounded-[10px] bg-[linear-gradient(180deg,_#D4A20C_0%,_#FFCC34_100%)]">
        <div className="absolute left-1/2 md:-top-[27px] -top-[39px] -translate-x-1/2 md:w-[235px] w-[379px] md:h-[59px] h-[77px] md:bg-[url('/images/campaign/mobile/leaderboard_bg.svg')] bg-[url('/images/campaign/task_board_bg.svg')] bg-no-repeat bg-center flex items-center justify-center text-[#F7F9EA] text-stroke-2 font-CherryBomb md:text-[26px] text-[32px] uppercase">
          Leaderboard
        </div>
        <div className="h-full md:p-[39px_10px] p-[50px_16px_16px] rounded-[10px] border-[2px] border-[#E5C375] bg-[#FFF1C7]">

          {
            round > 0 && <div className="flex items-center justify-end w-full mb-4">
              <div
                className="flex items-center bg-[#FFE15A] border-[1px] border-black rounded-[8px] px-2  text-black text-[12px] font-Montserrat font-medium"
              >
                <span className={clsx("mr-2 text-[18px] font-bold cursor-pointer", prevDisabled ? "opacity-50 cursor-not-allowed" : "")} onClick={() => {
                  handlePreviousRound()
                }}>◀</span>
                <span className="mx-1">Round{round}: {startDate} - {endDate}</span>
                <span className={clsx("ml-2 text-[18px] font-bold cursor-pointer", nextDisabled ? "opacity-50 cursor-not-allowed" : "")} onClick={() => {
                  handleNextRound()
                }}>▶</span>
              </div>
            </div>
          }

          {
            ranks?.reward && <div className="flex items-center text-[14px] mt-[10px]">
              <svg width="22" height="21" viewBox="0 0 22 21" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M11.0511 12.415L11.2113 12.4528C11.2113 12.4528 12.2842 13.4075 12.5641 14.5248C12.8703 15.7452 11.753 18.7747 8.18484 19.3496C6.96036 19.5471 7.96464 17.169 7.81228 15.8626L11.0511 12.415Z" fill="#C8C8E6" />
                <path d="M8.04905 19.6967C7.7446 19.6967 7.56245 19.5598 7.46329 19.445C7.1143 19.0408 7.22701 18.2925 7.35757 17.4261C7.43989 16.8799 7.52499 16.3151 7.47676 15.9011C7.4711 15.8527 7.47611 15.8036 7.49143 15.7572C7.50675 15.7109 7.53202 15.6685 7.56548 15.6329L10.8043 12.1853C10.8448 12.1422 10.8961 12.1105 10.9528 12.0934C11.0096 12.0763 11.0699 12.0745 11.1275 12.0881L11.2877 12.1259C11.3422 12.1388 11.3926 12.1649 11.4344 12.2021C11.4813 12.2439 12.588 13.2394 12.8897 14.4431C13.0819 15.2094 12.8033 16.3141 12.1797 17.2574C11.3266 18.5479 9.92655 19.4086 8.23744 19.6808C8.1722 19.6913 8.10873 19.6967 8.04905 19.6967ZM8.15915 15.983C8.18525 16.4525 8.10318 16.9973 8.02347 17.526C7.94485 18.0476 7.82608 18.836 7.97363 19.0069C7.97751 19.0115 7.98946 19.0253 8.04905 19.0253C8.07288 19.0253 8.10006 19.0229 8.12995 19.0181C10.0536 18.7081 11.0882 17.6886 11.6174 16.888C12.2108 15.9903 12.3542 15.0758 12.2364 14.606C12.0407 13.8247 11.4001 13.1141 11.1195 12.8318L8.15915 15.983Z" fill="#4B371F" />
                <path opacity="0.81" d="M2.08915 15.146C0.971569 16.2353 -0.035235 19.3006 0.471323 19.816C1.22055 20.5781 3.84139 19.397 4.95888 18.3074C6.07629 17.2181 6.46248 15.652 5.63606 14.8118C4.36571 13.5193 3.28921 13.9762 2.08915 15.146Z" fill="#FFC800" />
                <path opacity="0.81" d="M1.20955 20.3939C0.784047 20.3939 0.454759 20.2784 0.23094 20.0506C0.0718518 19.8888 -0.00365217 19.6364 0.000135651 19.2793C0.012425 18.136 0.887581 15.8475 1.85373 14.9057C2.71188 14.0693 3.40674 13.6963 4.10673 13.6963C4.71539 13.6963 5.29433 13.9843 5.87648 14.5766C6.23557 14.9417 6.42218 15.4334 6.41629 15.9987C6.40728 16.8574 5.95039 17.8101 5.19425 18.5472C4.29847 19.4206 2.4416 20.3939 1.20955 20.3939ZM4.10681 14.3677C3.59655 14.3677 3.04689 14.6817 2.32451 15.3858C1.86332 15.8353 1.3603 16.7377 1.01165 17.7411C0.617635 18.8747 0.643392 19.482 0.715614 19.5851C0.82706 19.698 1.04616 19.7225 1.20963 19.7225C2.23243 19.7225 3.93846 18.8326 4.72364 18.0671C5.35477 17.4518 5.73583 16.6761 5.74307 15.9916C5.74719 15.603 5.63036 15.285 5.39576 15.0466C4.9467 14.5897 4.52507 14.3677 4.10681 14.3677Z" fill="#4B371F" />
                <path d="M7.67479 8.99658L7.81393 8.81864C7.81393 8.81864 6.63457 6.00993 3.95876 8.14189C3.00819 8.89913 -0.416257 12.3128 1.91839 12.2402C4.25287 12.1678 4.85362 12.362 4.85362 12.362L7.67479 8.99658Z" fill="#C8C8E6" />
                <path d="M4.85284 12.6985C4.81967 12.6985 4.78626 12.6936 4.75351 12.6836C4.73617 12.6787 4.29207 12.5604 2.89437 12.5604C2.59589 12.5604 2.27072 12.5658 1.92813 12.5765C1.17941 12.6005 0.917543 12.2909 0.826636 12.0323C0.370834 10.7352 3.71363 7.90757 3.74789 7.88037C4.47456 7.30141 5.17624 7.00781 5.8333 7.00781C7.39935 7.00781 8.09488 8.62108 8.12375 8.68973C8.14686 8.74471 8.15486 8.80483 8.14693 8.86391C8.139 8.92299 8.11543 8.9789 8.07863 9.02588L7.9395 9.20382C7.9372 9.20683 7.93482 9.20977 7.93234 9.21263L5.11117 12.5781C5.07957 12.6158 5.04006 12.6461 4.99542 12.6669C4.95079 12.6877 4.90211 12.6985 4.85284 12.6985ZM2.89437 11.889C3.89797 11.889 4.44847 11.9478 4.7238 11.9931L7.41644 8.78063C7.22191 8.43525 6.69743 7.67919 5.83321 7.67919C5.33271 7.67919 4.77245 7.92335 4.16809 8.40487C2.5958 9.65739 1.33294 11.4429 1.46198 11.8102C1.47823 11.8565 1.60533 11.9064 1.84581 11.9064C1.86576 11.9064 1.88605 11.906 1.90709 11.9054C2.25667 11.8946 2.58882 11.889 2.89437 11.889Z" fill="#4B371F" />
                <path d="M18.0651 11.4499C21.6039 7.85016 20.9599 3.4004 19.8505 1.80846C18.9945 0.579939 17.6807 0.427853 17.6807 0.427853C5.52314 -0.888123 4.85278 12.3619 4.85278 12.3619C4.85278 12.3619 7.41394 12.9251 7.81124 15.8621C7.81124 15.8621 14.9244 14.6443 18.0651 11.4499Z" fill="#906EFF" />
                <path opacity="0.31" d="M7.89738 11.0701C7.89738 11.0701 12.8636 0.366113 18.186 0.830091C18.186 0.830091 9.2248 -2.17192 5.94202 8.46819L7.89738 11.0701Z" fill="white" />
                <path opacity="0.81" d="M3.06226 15.6987C2.48979 16.2565 1.97389 17.8269 2.2334 18.0908C2.61715 18.4814 3.95989 17.8765 4.53236 17.3182C5.10491 16.7602 5.30263 15.9579 4.87941 15.5273C4.22857 14.8651 3.67707 15.0992 3.06226 15.6987Z" fill="white" />
                <path d="M10.3218 5.74762C10.3217 6.31528 10.4338 6.8774 10.6517 7.40187C10.8695 7.92633 11.1888 8.40288 11.5914 8.80429C11.9939 9.2057 12.4718 9.52413 12.9977 9.74137C13.5237 9.95862 14.0874 10.0704 14.6567 10.0704C15.226 10.0704 15.7898 9.95862 16.3157 9.74137C16.8417 9.52413 17.3196 9.2057 17.7221 8.80429C18.1247 8.40288 18.444 7.92633 18.6618 7.40187C18.8796 6.8774 18.9917 6.31528 18.9917 5.74762C18.9917 5.17995 18.8796 4.61784 18.6618 4.09337C18.444 3.56891 18.1247 3.09236 17.7221 2.69095C17.3196 2.28953 16.8417 1.97111 16.3157 1.75387C15.7898 1.53662 15.226 1.4248 14.6567 1.4248C14.0874 1.4248 13.5237 1.53662 12.9977 1.75387C12.4718 1.97111 11.9939 2.28953 11.5914 2.69095C11.1888 3.09236 10.8695 3.56891 10.6517 4.09337C10.4338 4.61784 10.3217 5.17995 10.3218 5.74762Z" fill="#906EFF" />
                <path d="M11.3038 6.38919C11.3038 7.40306 11.7077 8.3754 12.4267 9.09231C13.1457 9.80922 14.1208 10.212 15.1376 10.212C16.1544 10.212 17.1295 9.80922 17.8485 9.09231C18.5675 8.3754 18.9714 7.40306 18.9714 6.38919C18.9714 5.37533 18.5675 4.40299 17.8485 3.68607C17.1295 2.96916 16.1544 2.56641 15.1376 2.56641C14.1208 2.56641 13.1457 2.96916 12.4267 3.68607C11.7077 4.40299 11.3038 5.37533 11.3038 6.38919Z" fill="#673DFF" />
                <path d="M8.07837 14.8052C8.60909 15.3954 8.07837 14.8052 8.23283 15.9467C8.23283 15.9467 15.2368 14.1404 18.3775 10.9462C21.4467 7.8242 21.0625 4.11162 20.0074 2.50977C20.2149 8.21834 14.3794 12.0714 8.07837 14.8052Z" fill="#673DFF" />
                <path d="M11.608 5.66035C11.608 6.48894 11.9316 7.2836 12.5076 7.8695C13.0836 8.45541 13.8648 8.78456 14.6794 8.78456C15.4939 8.78456 16.2751 8.45541 16.8511 7.8695C17.4271 7.2836 17.7507 6.48894 17.7507 5.66035C17.7507 5.25007 17.6713 4.84381 17.5169 4.46476C17.3626 4.08572 17.1363 3.7413 16.8511 3.45119C16.2751 2.86529 15.4939 2.53613 14.6794 2.53613C13.8648 2.53613 13.0836 2.86529 12.5076 3.45119C11.9316 4.0371 11.608 4.83176 11.608 5.66035Z" fill="#BED3EB" />
                <path d="M14.6793 9.12009C12.8001 9.12009 11.2714 7.56792 11.2714 5.66014C11.2714 3.75236 12.8001 2.2002 14.6793 2.2002C16.5585 2.2002 18.0873 3.75236 18.0873 5.66014C18.0873 7.56792 16.5585 9.12009 14.6793 9.12009ZM14.6793 2.87165C13.1715 2.87165 11.9448 4.12258 11.9448 5.66014C11.9448 7.1977 13.1715 8.44863 14.6793 8.44863C16.1872 8.44863 17.414 7.1977 17.414 5.66014C17.414 4.12258 16.1872 2.87165 14.6793 2.87165Z" fill="#4B371F" />
                <path d="M13.0994 14.3711C11.7154 8.34042 6.00962 7.30176 6.00962 7.30176L6.00945 7.30184C4.94533 9.95159 4.82471 12.3348 4.82471 12.3348C4.82471 12.3348 7.39883 12.9008 7.79815 15.8527C7.79823 15.8528 10.3636 15.4134 13.0994 14.3711Z" fill="#C8C8E6" />
                <path d="M7.79809 16.189C7.7166 16.189 7.63787 16.1595 7.57651 16.106C7.51515 16.0525 7.47533 15.9787 7.46443 15.8981C7.10282 13.2252 4.84696 12.6846 4.75108 12.6629C4.67368 12.6454 4.60493 12.6013 4.55688 12.5383C4.50883 12.4753 4.48455 12.3975 4.48829 12.3184C4.49334 12.2187 4.62406 9.84855 5.69678 7.17757C5.71369 7.13544 5.73903 7.09708 5.77127 7.06493C5.80996 7.02673 5.8573 6.99835 5.90928 6.98218C5.96127 6.96601 6.01639 6.96253 6.07 6.97202C6.13094 6.9831 7.57991 7.25538 9.216 8.29211C10.7286 9.25053 12.6871 11.0704 13.4276 14.2968C13.4457 14.3757 13.4346 14.4585 13.3963 14.5298C13.3581 14.6012 13.2953 14.6564 13.2195 14.6853C10.4841 15.7274 7.89068 16.189 7.79809 16.189ZM5.18163 12.095C5.87211 12.3419 7.61291 13.1804 8.07317 15.4593C8.81416 15.3119 10.6959 14.8994 12.7017 14.1618C12.1143 11.8955 10.8287 10.1171 8.8772 8.87292C7.74717 8.15253 6.6944 7.82058 6.21705 7.69552C5.4706 9.65945 5.24333 11.447 5.18163 12.095Z" fill="#4B371F" />
                <path opacity="0.83" d="M16.5091 6.1763C16.4198 6.1763 16.3342 6.14093 16.2711 6.07797C16.2079 6.01501 16.1724 5.92961 16.1724 5.84057C16.1724 5.5484 16.0854 5.26731 15.9207 5.02769C15.8718 4.9542 15.8538 4.86448 15.8707 4.77792C15.8876 4.69135 15.938 4.61488 16.0109 4.56503C16.0839 4.51518 16.1736 4.49594 16.2606 4.51148C16.3477 4.52701 16.4251 4.57607 16.4762 4.64806C16.7178 4.99903 16.8467 5.4149 16.8459 5.84057C16.8459 5.92961 16.8104 6.01499 16.7472 6.07795C16.6841 6.1409 16.5984 6.17628 16.5091 6.1763ZM12.7796 5.92459C12.6903 5.92459 12.6046 5.88922 12.5415 5.82625C12.4783 5.76329 12.4429 5.6779 12.4429 5.58886C12.4429 4.42463 13.3927 3.47754 14.5601 3.47754C14.8921 3.47754 15.2101 3.55207 15.5051 3.69904C15.5843 3.73925 15.6443 3.80904 15.6721 3.89318C15.6999 3.97732 15.6932 4.06901 15.6534 4.14825C15.6137 4.2275 15.5442 4.28788 15.4601 4.31624C15.3759 4.3446 15.2839 4.33864 15.2041 4.29966C15.0042 4.19988 14.7837 4.14828 14.5602 4.149C13.7641 4.149 13.1163 4.79494 13.1163 5.58886C13.1163 5.6779 13.0808 5.76328 13.0177 5.82624C12.9545 5.88919 12.8689 5.92457 12.7796 5.92459Z" fill="white" />
                <path opacity="0.63" d="M6.09913 7.60742L6.09905 7.60759C5.14308 10.1572 5.03467 12.4502 5.03467 12.4502C5.03467 12.4502 5.43559 12.1167 6.20393 12.9846C6.47673 12.0836 7.63859 10.0039 8.76677 8.79876C7.35063 7.852 6.09913 7.60742 6.09913 7.60742Z" fill="white" />
                <path opacity="0.31" d="M7.01501 13.9959C8.68073 13.4696 9.92087 12.0566 11.1894 10.7881C11.1894 10.7879 12.7358 12.8413 12.9066 14.3046C12.9066 14.3046 10.5704 15.3017 7.85709 15.7682C7.85709 15.7683 7.79707 14.5237 7.01501 13.9959Z" fill="#4B371F" />
                <path d="M7.81131 16.1976C7.72984 16.1976 7.65115 16.1681 7.5898 16.1146C7.52846 16.0612 7.48861 15.9874 7.47764 15.9069C7.11805 13.2487 4.87465 12.711 4.77928 12.6893C4.70188 12.6718 4.63313 12.6277 4.58508 12.5647C4.53703 12.5017 4.51275 12.4239 4.51649 12.3449C4.52289 12.2193 4.68913 9.23475 6.17556 6.20143C7.56207 3.37232 10.3972 0 16.0312 0C16.5744 0 17.1416 0.0315586 17.7171 0.0939204C17.7793 0.101139 19.1951 0.279159 20.1271 1.61671C20.6713 2.3977 21.196 3.93391 21.0365 5.90305C20.9156 7.39637 20.3436 9.6116 18.3057 11.6847C16.9648 13.0485 14.7977 14.2221 11.8646 15.173C9.69554 15.8762 7.94186 16.1802 7.86829 16.1928C7.84947 16.196 7.8304 16.1976 7.81131 16.1976ZM5.20975 12.1214C5.89761 12.3678 7.62798 13.2023 8.0863 15.4681C8.69732 15.3465 10.083 15.045 11.6655 14.5315C14.45 13.6278 16.5799 12.4808 17.8247 11.2147C21.2035 7.77759 20.6313 3.51702 19.574 1.99977C18.8207 0.91864 17.6522 0.762442 17.6405 0.761015C17.0928 0.701759 16.5502 0.671459 16.0311 0.671459C13.6932 0.671459 11.6722 1.28182 10.0242 2.48566C8.70313 3.45063 7.61182 4.79993 6.7806 6.49612C5.5988 8.908 5.28382 11.3413 5.20975 12.1214Z" fill="#4B371F" />
                <path opacity="0.15" d="M7.82572 16.2784C7.82572 16.2784 7.54963 19.131 9.48293 17.9308C11.4162 16.7305 12.4665 15.4656 12.4665 14.6152C12.4665 14.6152 12.4515 19.0421 7.78296 19.2852C7.78304 19.2852 7.20199 16.9002 7.82572 16.2784Z" fill="#4B371F" />
              </svg>

              <div className="text-[#FFCF23] font-bold ml-[5px]">{ranks?.reward ?? '-'} </div>
              <div className="ml-[5px] font-bold"> up for grabs this week!</div>
            </div>
          }

          <div className="m-[20px_0_85px] md:min-h-[400px] md:h-auto h-[400px] overflow-auto">
            <FlexTable
              loading={loadingRanks}
              columns={COLUMNS as Column[]}
              showHeader={true}
              list={ranks?.data ?? []}
              bodyClass={"rounded-[2px] py-0 h-[40px] flex flex-col justify-center"}
              renderEmpty={() => (
                <div className='mt-[50px] w-full flex justify-center items-center'>
                  <Empty desc='No Data' />
                </div>
              )}
            />
          </div>
          <div className="relative h-[80px] rounded-[12px] bg-[#FFDC50] border border-black p-[23px_17px_18px]">
            <div className="text-black font-Montserrat text-[16px] font-semibold ">Your Rank</div>
            <div className="flex items-center gap-[13px] justify-between">
              <div className="flex items-center gap-[13px]">
                <div className="text-[14px] font-bold">{ranks?.user?.rank ?? '-'}</div>
                <div className="font-Montserrat text-[12px]">
                  {ranks?.user?.address ? formatLongText(ranks?.user?.address, 5, 5) : formatLongText(account, 5, 5)}
                </div>
              </div>
              {
                ranks?.user
                  ? <div className={clsx(" text-[14px] flex-1 text-right", ranks?.user?.profit >= 0 ? 'text-[#7EA82B]' : 'text-[#FF0000]')}>
                    {ranks?.user?.profit ?? '-'}
                  </div>
                  : <div>-</div>
              }
            </div>
          </div>
        </div>
      </div>
    </Modal>
  )
})

const colors = ['#FFC25A', '#FFA100', '#D2D3FF', '#9598DD', '#D4BF98', '#B97D5D']
const RankItem = (props: any) => {
  const { rank } = props;

  if (rank <= 3) {
    return (
      <div className="relative w-[26px] h-[26px] flex items-center justify-center">
        <svg className="absolute top-0 left-0" width="26" height="26" viewBox="0 0 26 26" fill="none" xmlns="http://www.w3.org/2000/svg">
          <path d="M12.0273 1.48633C12.588 1.00858 13.412 1.00858 13.9727 1.48633L16.1631 3.35254C16.5634 3.69363 17.0616 3.89957 17.5859 3.94141L20.4541 4.1709C21.188 4.22971 21.7703 4.81204 21.8291 5.5459L22.0586 8.41406C22.1004 8.93836 22.3064 9.43655 22.6475 9.83691L24.5137 12.0273C24.9914 12.588 24.9914 13.412 24.5137 13.9727L22.6475 16.1631C22.3064 16.5634 22.1004 17.0616 22.0586 17.5859L21.8291 20.4541C21.7703 21.188 21.188 21.7703 20.4541 21.8291L17.5859 22.0586C17.0616 22.1004 16.5634 22.3064 16.1631 22.6475L13.9727 24.5137C13.412 24.9914 12.588 24.9914 12.0273 24.5137L9.83691 22.6475C9.43655 22.3064 8.93836 22.1004 8.41406 22.0586L5.5459 21.8291C4.81204 21.7703 4.22971 21.188 4.1709 20.4541L3.94141 17.5859C3.89957 17.0616 3.69363 16.5634 3.35254 16.1631L1.48633 13.9727C1.00858 13.412 1.00858 12.588 1.48633 12.0273L3.35254 9.83691C3.69363 9.43655 3.89957 8.93836 3.94141 8.41406L4.1709 5.5459C4.22971 4.81204 4.81204 4.22971 5.5459 4.1709L8.41406 3.94141C8.93836 3.89957 9.43655 3.69363 9.83691 3.35254L12.0273 1.48633Z" fill={"url(#paint0_linear_2952_1144_" + rank + ")"} stroke="black" />
          <defs>
            <linearGradient id={"paint0_linear_2952_1144_" + rank} x1="13" y1="0" x2="13" y2="26" gradientUnits="userSpaceOnUse">
              <stop stop-color={colors[(Number(rank) - 1) * 2]} />
              <stop offset="1" stop-color={colors[(Number(rank) - 1) * 2 + 1]} />
            </linearGradient>
          </defs>
        </svg>
        <div className="relative z-10 text-black font-bold text-[14px]">{rank} </div>
      </div>
    )
  }

  return (
    <div className="w-[26px] h-[26px] font-bold flex items-center justify-center">{rank}</div>
  )
}